[
    {
        "DisplayName": "Server Port",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "",
        "Keywords": "",
        "FieldName": "$ServerPort",
        "InputType": "number",
        "Hidden": true,
        "ParamFieldName": "server.port",
        "EnumValues": {}
    },
    {
        "DisplayName": "Query Port",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "",
        "Keywords": "",
        "FieldName": "$Query_RCONPort",
        "InputType": "number",
        "Hidden": true,
        "ParamFieldName": "server.queryport",
        "EnumValues": {}
    },
    {
        "DisplayName": "RCON Port",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "",
        "Keywords": "",
        "FieldName": "$Query_RCONPort",
        "InputType": "number",
        "Hidden": true,
        "ParamFieldName": "rcon.port",
        "EnumValues": {}
    },
    {
        "DisplayName": "Rust Plus App Port",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "",
        "Keywords": "",
        "FieldName": "$RustPlusAppPort",
        "InputType": "number",
        "Hidden": true,
        "ParamFieldName": "app.port",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Name",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the server name visible in the server browser",
        "Keywords": "server,name,hostname,server.hostname",
        "FieldName": "server.hostname",
        "InputType": "text",
        "ParamFieldName": "server.hostname",
        "IncludeInCommandLine": true,
        "DefaultValue": "AMP Powered Rust Server",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Description",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the server description as shown in the server connection window",
        "Keywords": "server,description,server.description",
        "FieldName": "server.description",
        "InputType": "text",
        "ParamFieldName": "server.description",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server MOTD",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the player welcome message (MOTD)",
        "Keywords": "motd,welcome,message,server.motd",
        "FieldName": "server.motd",
        "InputType": "Textarea",
        "ParamFieldName": "server.motd",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "Welcome to Rust!",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Tags",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets a comma-separated list of [server tags](https://wiki.facepunch.com/rust/server-browser-tags) that give additional information about the server in the server browser, such as wipe schedule, game mode and region",
        "Keywords": "tags",
        "FieldName": "server.tags",
        "InputType": "text",
        "ParamFieldName": "server.tags",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Header Image URL",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the image for the server banner. Must be a direct URL to a JPG or PNG image. Image must be 512 x 256 or 1024 x 512 px",
        "Keywords": "server,header,image,banner,server.headerimage",
        "FieldName": "server.headerimage",
        "InputType": "url",
        "ParamFieldName": "server.headerimage",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "",
        "Placeholder": "https://mysite.com/serverimage.jpg",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Logo URL",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the server's logo image or icon, as shown in the server browser and Rust+ app. Must be a direct URL to a JPG or PNG image. Image recommended to be 256 x 256 px",
        "Keywords": "server,logo,icon,server.logoimage",
        "FieldName": "server.logoimage",
        "InputType": "url",
        "ParamFieldName": "server.logoimage",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "",
        "Placeholder": "https://mysite.com/serverlogo.jpg",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server URL",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the URL for a website associated with the server",
        "Keywords": "server,url,website,server.url",
        "FieldName": "server.url",
        "InputType": "url",
        "ParamFieldName": "server.url",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "",
        "Placeholder": "https://mysite.com",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Seed",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the map generation seed for procedural maps. Use any number up to 2147483647",
        "Keywords": "seed,map,generation,server.seed",
        "FieldName": "server.seed",
        "InputType": "number",
        "MinValue": "0",
        "MaxValue": "2147483647",
        "ParamFieldName": "server.seed",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "{{randomdigits(6)}}",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Level",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the server level (map)",
        "Keywords": "level,map,server.level",
        "FieldName": "server.level",
        "InputType": "enum",
        "IsFlagArgument": false,
        "ParamFieldName": "server.level",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "Procedural Map",
        "EnumValues": {
            "Procedural Map": "Procedural Map (default)",
            "Barren": "Barren",
            "CraggyIsland": "Craggy Island",
            "": "--Custom--"
        }
    },
    {
        "DisplayName": "Server Level URL",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets a URL to download a custom map to start the server with. Select Custom under Server Level, and remove the Server Seed and World Size setting values",
        "Keywords": "level,map,server.levelurl",
        "FieldName": "server.levelurl",
        "InputType": "url",
        "ParamFieldName": "server.levelurl",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "",
        "Placeholder": "https://mysite.com/custom.map",
        "EnumValues": {}
    },
    {
        "DisplayName": "World Size",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the size of the map generated for procedural maps",
        "Keywords": "map,world,size,server.worldsize",
        "FieldName": "server.worldsize",
        "InputType": "number",
        "MinValue": "1000",
        "MaxValue": "6000",
        "ParamFieldName": "server.worldsize",
        "IncludeInCommandLine": true,
        "SkipIfEmpty": true,
        "DefaultValue": "3000",
        "Placeholder": "3000",
        "Suffix": "sq m",
        "EnumValues": {}
    },
    {
        "DisplayName": "Player Limit",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the maximum number of players that may connect to the server at one time",
        "Keywords": "maximum,players,clients,limit,maxplayers",
        "FieldName": "$MaxUsers",
        "InputType": "number",
        "MinValue": "1",
        "ParamFieldName": "server.maxplayers",
        "IncludeInCommandLine": true,
        "DefaultValue": "10",
        "Placeholder": "10",
        "Suffix": "players",
        "EnumValues": {}
    },
    {
        "DisplayName": "RCON Password",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "See the Security and Privacy menu for configurable options for the server's RCON",
        "Keywords": "rcon,password",
        "FieldName": "$RemoteAdminPassword",
        "InputType": "hidden",
        "IsFlagArgument": false,
        "ParamFieldName": "rcon.password",
        "IncludeInCommandLine": false,
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Admins",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Specifies the [Steam64 IDs](https://www.steamidfinder.com/) of server admins (either ownerid or moderatorid) to include in \"users.cfg\". One entry per line. Admins can execute all Rust commands in-game. Format: ownerid|moderatorid \"Steam64 ID\" \"optional name\" \"optional reason\"",
        "Keywords": "admin,ownerid,moderatorid",
        "FieldName": "Admins",
        "InputType": "Textarea",
        "ParamFieldName": "Admins",
        "DefaultValue": "",
        "EnumValues": {}
    },
    {
        "DisplayName": "Save Interval",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the interval between server saves",
        "Keywords": "save,interval,server.saveinterval",
        "FieldName": "server.saveinterval",
        "InputType": "number",
        "MinValue": "1",
        "ParamFieldName": "server.saveinterval",
        "IncludeInCommandLine": true,
        "DefaultValue": "600",
        "Placeholder": "600",
        "Suffix": "seconds",
        "EnumValues": {}
    },
    {
        "DisplayName": "Enable VAC",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "If set, Valve Anti Cheat (VAC) will be enabled on the server",
        "Keywords": "anticheat,vac,secure,server.secure",
        "FieldName": "server.secure",
        "InputType": "checkbox",
        "ParamFieldName": "server.secure",
        "IncludeInCommandLine": true,
        "DefaultValue": "true",
        "EnumValues": {
            "False": "false",
            "True": "true"
        }
    },
    {
        "DisplayName": "Server/RCON IP Binding",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "If required, you can change the IP binding of the server and RCON by changing the 'Server IP Address' setting under Security and Privacy. NOTE: The IP must be reachable by AMP, otherwise AMP's console won't work",
        "Keywords": "ip,binding",
        "FieldName": "ip",
        "InputType": "hidden",
        "ParamFieldName": "ip",
        "IncludeInCommandLine": false,
        "EnumValues": {}
    },
    {
        "DisplayName": "Rust Plus App Public IP Selection Mode",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets whether AMP should automatically select the public IP advertised for the Rust+ app, or whether it should use the IP set under Rust Plus App Public IP",
        "Keywords": "public,ip,publicip,rust,plus,app",
        "FieldName": "PublicIP",
        "InputType": "enum",
        "ParamFieldName": "PublicIP",
        "DefaultValue": "{{$ExternalIP}}",
        "EnumValues": {
            "{{$ExternalIP}}": "Automatic (default)",
            "{{ManualPublicIP}}": "Manual"
        }
    },
    {
        "DisplayName": "Rust Plus App Public IP",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the public IP advertised for the Rust+ app, if \"Manual\" is selected as the Rust Plus App Public IP Selection Mode. Useful if the host network has multiple public IPs, or the server is behind a public proxy",
        "Keywords": "manual,public,ip,publicip,rust,plus,app",
        "FieldName": "ManualPublicIP",
        "InputType": "text",
        "ParamFieldName": "ManualPublicIP",
        "DefaultValue": "",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Tickrate",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the server refresh rate. Not recommended to exceed 30",
        "Keywords": "refresh,rate,tickrate,server.tickrate",
        "FieldName": "server.tickrate",
        "InputType": "number",
        "MinValue": "1",
        "ParamFieldName": "server.tickrate",
        "IncludeInCommandLine": true,
        "DefaultValue": "30",
        "Placeholder": "30",
        "EnumValues": {}
    },
    {
        "DisplayName": "FPS Limit",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the maximum number of frames to render per second. -1 = unlimited",
        "Keywords": "fps,limit,fps.limit",
        "FieldName": "fps.limit",
        "InputType": "number",
        "MinValue": "-1",
        "ParamFieldName": "fps.limit",
        "IncludeInCommandLine": true,
        "DefaultValue": "256",
        "Placeholder": "256",
        "Suffix": "fps",
        "EnumValues": {}
    },
    {
        "DisplayName": "Additional Command Line Parameters",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Specifies additional command line parameters that are not otherwise set by AMP. ONE LINE ONLY! Use with care. Alternatively, specify the equivalent under \"Additional Server Settings\"",
        "Keywords": "custom,server,arguments,variables,cvars,convars,parameters",
        "FieldName": "CustomServerArgs",
        "InputType": "Textarea",
        "ParamFieldName": "CustomServerArgs",
        "DefaultValue": "",
        "EnumValues": {}
    },
    {
        "DisplayName": "Additional Server Settings",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Specifies additional settings to include in \"server.cfg\" that are not otherwise set by AMP. Example: time.maxdelta \"0.33\". One setting per line. To list all settings in the console, type: find .",
        "Keywords": "additional,settings,custom",
        "FieldName": "UserSettings",
        "InputType": "Textarea",
        "ParamFieldName": "UserSettings",
        "DefaultValue": "",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Identity",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Server:dns:1",
        "Description": "Sets the subdirectory name for the server's config, map, save and blueprint files, as stored in the 'server' directory. Don't include spaces or special characters, and don't change this unless you know what are doing!",
        "Keywords": "server,directory,name,local,identity,server.identity",
        "FieldName": "serveridentity",
        "InputType": "text",
        "ParamFieldName": "server.identity",
        "IncludeInCommandLine": true,
        "DefaultValue": "AMPRustServer",
        "Placeholder": "AMPRustServer",
        "Required": true,
        "EnumValues": {}
    },
    {
        "DisplayName": "Initial Game Mode",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Gameplay:joystick:2",
        "Description": "Sets the initial server game mode",
        "Keywords": "game,mode,server.gamemode",
        "FieldName": "server.gamemode",
        "InputType": "enum",
        "ParamFieldName": "server.gamemode",
        "IncludeInCommandLine": true,
        "DefaultValue": "vanilla",
        "EnumValues": {
            "vanilla": "Vanilla (default)",
            "primitive": "Primitive",
            "softcore": "Softcore",
            "hardcore": "Hardcore"
        }
    },
    {
        "DisplayName": "Enable PvE / Disable PvP",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Gameplay:joystick:2",
        "Description": "If set, PvE will be enabled. Otherwise, PvP will apply",
        "Keywords": "pve,pvp,server.pve",
        "FieldName": "server.pve",
        "InputType": "checkbox",
        "IsFlagArgument": false,
        "ParamFieldName": "server.pve",
        "IncludeInCommandLine": true,
        "DefaultValue": "true",
        "EnumValues": {
            "False": "false",
            "True": "true"
        }
    },
    {
        "DisplayName": "Enable Chat Display",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Gameplay:joystick:2",
        "Description": "If set, chat will be displayed",
        "Keywords": "chat,enabled,chat.enabled",
        "FieldName": "chat.enabled",
        "InputType": "checkbox",
        "IsFlagArgument": false,
        "ParamFieldName": "chat.enabled",
        "IncludeInCommandLine": true,
        "DefaultValue": "true",
        "EnumValues": {
            "False": "false",
            "True": "true"
        }
    },
    {
        "DisplayName": "Enable Global Chat",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Gameplay:joystick:2",
        "Description": "If set, chat will not depend on location. Otherwise, players need to be close to each other to chat",
        "Keywords": "chat,global,chat.globalchat",
        "FieldName": "chat.globalchat",
        "InputType": "checkbox",
        "IsFlagArgument": false,
        "ParamFieldName": "chat.globalchat",
        "IncludeInCommandLine": true,
        "DefaultValue": "true",
        "EnumValues": {
            "False": "false",
            "True": "true"
        }
    },
    {
        "DisplayName": "Server Metrics Display",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Gameplay:joystick:2",
        "Description": "Sets what server performance metrics are displayed in the bottom corner of the client screen (if any)",
        "Keywords": "perf,metrics,performance,global.perf",
        "FieldName": "global.perf",
        "InputType": "enum",
        "IsFlagArgument": false,
        "ParamFieldName": "global.perf",
        "IncludeInCommandLine": true,
        "DefaultValue": "0",
        "EnumValues": {
            "0": "Nothing (default)",
            "1": "FPS",
            "2": "FPS, latency",
            "3": "FPS, latency, RAM",
            "4": "FPS, latency, RAM, GC",
            "5": "FPS, latency, RAM, GC, ping",
            "6": "FPS, latency, RAM, GC, ping, tasks"
        }
    },
    {
        "DisplayName": "Idle Kick Mode",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Gameplay:joystick:2",
        "Description": "Sets the mode for whether the server kicks idle players",
        "Keywords": "idle,kick,server.idlekickmode",
        "FieldName": "server.idlekickmode",
        "InputType": "enum",
        "IsFlagArgument": false,
        "ParamFieldName": "server.idlekickmode",
        "IncludeInCommandLine": true,
        "DefaultValue": "1",
        "EnumValues": {
            "0": "No idle kick",
            "1": "Kick if server full (default)",
            "2": "Always kick"
        }
    },
    {
        "DisplayName": "Idle Kick Period",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Gameplay:joystick:2",
        "Description": "Sets the time period for which a player must be idle before they can be kicked by the server (if the server is set to kick idle players)",
        "Keywords": "idle,kick,server.idlekick",
        "FieldName": "server.idlekick",
        "InputType": "number",
        "MinValue": "1",
        "IsFlagArgument": false,
        "ParamFieldName": "server.idlekick",
        "IncludeInCommandLine": true,
        "DefaultValue": "30",
        "Placeholder": "30",
        "Suffix": "minutes",
        "EnumValues": {}
    },
    {
        "DisplayName": "Enable Admin Idle Kicking",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Gameplay:joystick:2",
        "Description": "If enabled, admins can be idle kicked like other players",
        "Keywords": "idle,kick,admins,server.idlekickadmins",
        "FieldName": "server.idlekickadmins",
        "InputType": "checkbox",
        "IsFlagArgument": false,
        "ParamFieldName": "server.idlekickadmins",
        "IncludeInCommandLine": true,
        "DefaultValue": "0",
        "EnumValues": {
            "False": "0",
            "True": "1"
        }
    },
    {
        "DisplayName": "Enable Server Wipe On Update",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Wipes:folder_delete:3",
        "Description": "If set, the server will be wiped when it is updated. All .map and .sav files in the Server Identity subdirectory will be deleted, as well as optionally any other files specified in Mod Database File Wipelist and Carbon/Oxide Data File Wipelist",
        "Keywords": "wipe,delete",
        "FieldName": "EnableWipe",
        "InputType": "checkbox",
        "ParamFieldName": "EnableWipe",
        "DefaultValue": "false",
        "EnumValues": {
            "False": "false",
            "True": "true"
        }
    },
    {
        "DisplayName": "Mod Database File Wipelist",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Wipes:folder_delete:3",
        "Description": "If required, specifies a space-separated list of .db files in the Server Identity subdirectory to wipe on update. Wildcards (*) can be used",
        "Keywords": "wipe,delete,mod,db,database,files,wipelist",
        "FieldName": "ModDBWipelist",
        "InputType": "Textarea",
        "ParamFieldName": "ModDBWipelist",
        "DefaultValue": "",
        "EnumValues": {}
    },
    {
        "DisplayName": "Carbon/Oxide Data File Wipelist",
        "Category": "Rust:stadia_controller",
        "Subcategory": "Wipes:folder_delete:3",
        "Description": "If required, specifies a space-separated list of .json files in carbon/data or oxide/data (as applicable) to wipe on update. Wildcards (*) can be used",
        "Keywords": "wipe,delete,carbon,oxide,files,wipelist",
        "FieldName": "CarbonOxideDataWipelist",
        "InputType": "Textarea",
        "ParamFieldName": "CarbonOxideDataWipelist",
        "DefaultValue": "",
        "EnumValues": {}
    },
    {
        "DisplayName": "Server Branch",
        "Category": "Updates",
        "Subcategory": "Steam Downloads:download",
        "Description": "Sets the server branch to install. Update the server after switching branches",
        "Keywords": "server,branch,depot",
        "FieldName": "ServerBranch",
        "InputType": "enum",
        "ParamFieldName": "ServerBranch",
        "DefaultValue": "public",
        "EnumValues": {
            "public": "Public (default)",
            "staging": "Staging",
            "aux01": "Pre-Staging (aux01)",
            "aux02": "Up and Coming (aux02)",
            "experimental": "Experimental"
        }
    },
    {
        "DisplayName": "Mod Loader",
        "Category": "Updates",
        "Subcategory": "Mod Loaders:code:3",
        "Description": "Sets the mod loader to install (if any) when the server is updated",
        "Keywords": "install,carbon,umod,oxide,mod,modloader",
        "FieldName": "ModLoader",
        "InputType": "enum",
        "ParamFieldName": "ModLoader",
        "DefaultValue": "none",
        "EnumValues": {
            "none": "None (default)",
            "carbon": "Carbon",
            "umod": "uMod/Oxide"
        }
    }
]