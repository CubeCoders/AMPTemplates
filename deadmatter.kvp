Meta.DisplayName=Dead Matter
Meta.Description=Dead Matter Dedicated Server
Meta.OS=Windows, Linux
Meta.AarchSupport=NotSupported
Meta.Arch=x86_64
Meta.Author=winglessraven
Meta.URL=https://store.steampowered.com/app/2184150/Dead_Matter/
Meta.DisplayImageSource=steam:2184150
Meta.EndpointURIFormat=steam://connect/{0}
Meta.ConfigManifest=deadmatterconfig.json
Meta.MetaConfigManifest=
Meta.ConfigRoot=deadmatter.kvp
Meta.MinAMPVersion=2.4.6.0
Meta.SpecificDockerImage=cubecoders/ampbase
Meta.DockerRequired=False
Meta.ContainerPolicy=SupportedOnWindows, RecommendedOnLinux
Meta.ContainerPolicyReason=The server requires Proton to run on Linux. Using a container avoids the need to install this dependency on the host.
Meta.ExtraSetupStepsURI=
Meta.Prerequsites=[]
Meta.ExtraContainerPackages=[]
Meta.ConfigReleaseState=Release
Meta.NoCommercialUsage=False
Meta.ConfigVersion=0.1.24.2
Meta.ReleaseNotes=
Meta.BreakingReleaseNotes=
App.DisplayName=Dead Matter
App.RootDir=./deadmatter/
App.BaseDirectory=./deadmatter/2584780/
App.SteamWorkshopDownloadLocation=
App.ExecutableWin=2584780\DeadMatter\Binaries\Win64\DeadMatterServer-Win64-Test.exe
App.ExecutableLinux=.proton/proton
App.WorkingDir=2584780/DeadMatter/Binaries/Win64
App.LinuxCommandLineArgs=runinprefix "{{$FullBaseDir}}DeadMatter/Binaries/Win64/DeadMatterServer-Win64-Test.exe"
App.WindowsCommandLineArgs=
App.CommandLineArgs={{$PlatformArgs}} -log -Port={{$ApplicationPort1}} -QueryPort={{$ApplicationPort2}} {{$FormattedArgs}} -Wait
App.UseLinuxIOREDIR=False
App.AppSettings={}
App.EnvironmentVariables={"LD_LIBRARY_PATH":"{{$FullRootDir}}linux64:%LD_LIBRARY_PATH%","SteamAppId":"2184150","STEAM_COMPAT_DATA_PATH":"{{$FullRootDir}}.proton/compatdata","STEAM_COMPAT_CLIENT_INSTALL_PATH":"{{$FullBaseDir}}.steam/steam","HOME":"{{$FullBaseDir}}"}
App.CommandLineParameterFormat=-{0}="{1}"
App.CommandLineParameterDelimiter= 
App.ExitMethod=OS_CLOSE
App.ExitTimeout=30
App.ExitString=taskkill /IM
App.ExitFile=app_exit.lck
App.HasWriteableConsole=True
App.HasReadableConsole=True
App.SupportsLiveSettingsChanges=False
App.LiveSettingChangeCommandFormat=set {0} "{1}"
App.ApplicationIPBinding=0.0.0.0
App.Ports=@IncludeJson[deadmatterports.json]
App.AdminPortRef=0
App.PrimaryApplicationPortRef=ApplicationPort1
App.UniversalSleepApplicationUDPPortRef=ApplicationPort1
App.UniversalSleepSteamQueryPortRef=ApplicationPort2
App.MaxUsers=32
App.UseRandomAdminPassword=False
App.PersistRandomPassword=True
App.AdminMethod=STDIO
App.AdminLoginTransform=None
App.LoginTransformPrefix=
App.RCONConnectDelaySeconds=30
App.RCONConnectRetrySeconds=15
App.RCONHeartbeatMinutes=0
App.RCONHeartbeatCommand=ping
App.TelnetLoginFormat={0}
App.UpdateSources=@IncludeJson[deadmatterupdates.json]
App.PreStartStages=[]
App.ForceUpdate=False
App.ForceUpdateReason=
App.Compatibility=None
App.SteamUpdateAnonymousLogin=False
App.SteamForceLoginPrompt=True
App.RapidStartup=False
App.MonitorChildProcess=True
App.DumpFullChildProcessTree=False
App.MonitorChildProcessWaitMs=1000
App.MonitorChildProcessName=DeadMatterServer-Win64-Test.exe
App.SupportsUniversalSleep=False
App.WakeupMode=Any
App.ApplicationReadyMode=RegexMatch
App.TemplateMatchRegex={{(\$?[\w]+)}}
Console.FilterMatchRegex=
Console.FilterMatchReplacement=
Console.ThrowawayMessageRegex=
Console.AppReadyRegex=^LogLoad: \(Engine Initialization\) Total time: (\d+\.\d+) seconds$
Console.UserJoinRegex=^LogDMDebug: \[ASurvivalBaseGamemode::PostLogin: \d+\] Player (?<username>.+?) connected!$
Console.UserLeaveRegex=^LogDMDebug: \[ASurvivalBaseGamemode::PostLogin: \d+\] Player (?<username>.+?) left!$
Console.UserChatRegex=^$
Console.UpdateAvailableRegex=^\[\d\d:\d\d:\d\d\] \[INFO\] A new server update is available! v[\d\.]+.$
Console.MetricsRegex=
Console.SuppressLogAtStart=False
Console.ActivateLogRegex=
Console.UserActions={}
Limits.SleepMode=False
Limits.SleepOnStart=False
Limits.SleepDelayMinutes=5
Limits.DozeDelay=2
Limits.AutoRetryCount=5
Limits.SleepStartThresholdSeconds=25
