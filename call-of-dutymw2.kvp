Meta.DisplayName=Call of Duty: Modern Warfare 2 (2009)
Meta.Description=Call of Duty: Modern Warfare 2 (2009) Dedicated Server
Meta.OS=Windows, Linux
Meta.AarchSupport=Unknown
Meta.Arch=x86_64
Meta.Author=Greelan
Meta.URL=https://www.callofduty.com/modernwarfare2
Meta.DisplayImageSource=steam:10190
Meta.EndpointURIFormat=steam://connect/{0}
Meta.ConfigManifest=call-of-dutymw2config.json
Meta.MetaConfigManifest=call-of-dutymw2metaconfig.json
Meta.ConfigRoot=call-of-dutymw2.kvp
Meta.MinAMPVersion=2.4.6.4
Meta.SpecificDockerImage=cubecoders/ampbase:wine
Meta.DockerRequired=False
Meta.DockerBaseReadOnly=False
Meta.ContainerPolicy=SupportedOnWindows, RecommendedOnLinux
Meta.ContainerPolicyReason=The server requires Wine to run on Linux. Using a container avoids the need to install this dependency on the host.
Meta.ExtraSetupStepsURI=
Meta.Prerequsites=[]
Meta.ExtraContainerPackages=[]
Meta.ConfigReleaseState=NotSpecified
Meta.NoCommercialUsage=False
Meta.ConfigVersion=0.0.0.0
Meta.ReleaseNotes=
Meta.BreakingReleaseNotes=
App.DisplayName=Call of Duty: Modern Warfare 2 (2009)
App.RootDir=./call-of-dutymw2/
App.BaseDirectory=./call-of-dutymw2/10190/
App.SteamWorkshopDownloadLocation=
App.ExecutableWin=10190\iw4x.exe
App.ExecutableLinux=/usr/bin/wine
App.WorkingDir=10190
App.LinuxCommandLineArgs="./iw4x.exe"
App.WindowsCommandLineArgs=
App.CommandLineArgs={{$PlatformArgs}} -console -dedicated -stdout +fs_game "{{fs_game}}" +set net_port "{{$GamePort}}" +set net_ip "{{$ApplicationIPBinding}}" +exec "server.cfg" +set party_enable "0" {{$FormattedArgs}} +map_rotate
App.UseLinuxIOREDIR=False
App.AppSettings={}
App.EnvironmentVariables={"SteamAppId":"10190","WINEPREFIX":"{{$FullRootDir}}.wine","WINEARCH":"win32","WINEDEBUG":"-all"}
App.CommandLineParameterFormat=+set {0} "{1}"
App.CommandLineParameterDelimiter= 
App.ExitMethod=OS_CLOSE
App.ExitTimeout=30
App.ExitString=quit
App.ExitFile=app_exit.lck
App.HasWriteableConsole=True
App.HasReadableConsole=True
App.SupportsLiveSettingsChanges=False
App.LiveSettingChangeCommandFormat=set {0} "{1}"
App.ApplicationIPBinding=0.0.0.0
App.Ports=[{"Protocol":"Both","Port":28960,"Ref":"GamePort","Name":"Game Port","Description":"Port for game traffic"}]
App.AdminPortRef=0
App.PrimaryApplicationPortRef=GamePort
App.UniversalSleepApplicationUDPPortRef=0
App.UniversalSleepSteamQueryPortRef=0
App.MaxUsers=18
App.UseRandomAdminPassword=False
App.PersistRandomPassword=False
App.RemoteAdminPassword=
App.AdminMethod=STDIO
App.AdminLoginTransform=None
App.LoginTransformPrefix=
App.RCONConnectDelaySeconds=5
App.RCONConnectRetrySeconds=5
App.RCONHeartbeatMinutes=0
App.RCONHeartbeatCommand=ping
App.TelnetLoginFormat=login {0}
App.UpdateSources=@IncludeJson[call-of-dutymw2updates.json]
App.PreStartStages=[]
App.ForceUpdate=False
App.ForceUpdateReason=
App.Compatibility=None
App.SteamUpdateAnonymousLogin=False
App.SteamForceLoginPrompt=False
App.RapidStartup=False
App.MonitorChildProcess=True
App.DumpFullChildProcessTree=False
App.MonitorChildProcessWaitMs=1000
App.MonitorChildProcessName=iw4x.exe
App.SupportsUniversalSleep=True
App.WakeupMode=Any
App.ApplicationReadyMode=RegexMatch
App.TemplateMatchRegex={{(\$?[\w]+)}}
Console.FilterMatchRegex=
Console.FilterMatchReplacement=
Console.ThrowawayMessageRegex=^(WARNING|ERROR): Shader.+$
Console.AppReadyRegex=^Got \d+ names from the master server$
Console.UserJoinRegex=^Registering xuid (?<userid>.+?) at slot \d+ in .*$
Console.UserLeaveRegex=^Removing xuid (?<userid>.+?) \(clientNum \d+\) from session$
Console.UserChatRegex=^$
Console.UpdateAvailableRegex=^\[\d\d:\d\d:\d\d\] \[INFO\] A new server update is available! v[\d\.]+.$
Console.MetricsRegex=
Console.SuppressLogAtStart=False
Console.ActivateLogRegex=
Console.UserActions={}
Limits.SleepMode=False
Limits.SleepOnStart=False
Limits.SleepDelayMinutes=5
Limits.DozeDelay=2
Limits.AutoRetryCount=5
Limits.SleepStartThresholdSeconds=25
