[
    {
        "UpdateStageName": "Resonite Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "SteamCMD",
        "UpdateSourceData": "2519830",
        "UpdateSourceArgs": "2519830",
        "UpdateSourceTarget": "{{$FullRootDir}}2519830",
        "UpdateSourceVersion": "headless"
    },
    {
        "UpdateStageName": "Data Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}Data"
    },
    {
        "UpdateStageName": "Cache Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}Cache"
    },
    {
        "UpdateStageName": "Logs Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}Logs"
    },
    {
        "UpdateStageName": "Config Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}Config"
    },
    {
        "UpdateStageName": "Libraries Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}Libraries"
    },
    {
        "UpdateStageName": "rml_libs Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}rml_libs"
    },
    {
        "UpdateStageName": "rml_mods Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}rml_mods"
    },
    {
        "UpdateStageName": "DefaultConfig.json Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://raw.githubusercontent.com/Greelan/AMPTemplates/dev/resonitedefaultconfig.json",
        "UpdateSourceArgs": "Config.json",
        "UpdateSourceTarget": "{{$FullBaseDir}}Config",
        "OverwriteExistingFiles": false
    },
    {
        "UpdateStageName": "ResoniteModLoader.dll Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "GithubRelease",
        "UpdateSourceArgs": "resonite-modding-group/ResoniteModLoader",
        "UpdateSourceData": "ResoniteModLoader.dll",
        "UpdateSourceTarget": "{{$FullBaseDir}}Libraries",
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "-LoadAssembly Libraries/ResoniteModLoader.dll "
    },
    {
        "UpdateStageName": "0Harmony-Net8.dll Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "GithubRelease",
        "UpdateSourceArgs": "resonite-modding-group/ResoniteModLoader",
        "UpdateSourceData": "0Harmony-Net8.dll",
        "UpdateSourceTarget": "{{$FullBaseDir}}rml_libs",
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "-LoadAssembly Libraries/ResoniteModLoader.dll "
    },
    {
        "UpdateStageName": "Create ResoniteModLoader.conf File",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateFile",
        "UpdateSourceArgs": "{{$FullBaseDir}}Libraries/ResoniteModLoader.conf",
        "OverwriteExistingFiles": false,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "-LoadAssembly Libraries/ResoniteModLoader.dll "
    },
    {
        "UpdateStageName": "Dotnet Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullRootDir}}2519830/Dotnet"
    },
    {
        "UpdateStageName": ".NET Runtime Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"DotnetVersion=\\\"{{DotnetVersion}}\\\" && if [[ -z \\\"$DotnetVersion\\\" ]]; then DotnetVersion=$(wget -qO- https://builds.dotnet.microsoft.com/dotnet/release-metadata/9.0/releases.json | jq -r \\\".[\\\\\\\"latest-runtime\\\\\\\"]\\\"); fi && if [[ ! \\\"$DotnetVersion\\\" =~ ^[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then echo \\\"Invalid .NET Runtime version format specified\\\" && exit 1; fi && wget -qO dotnet.tar.gz https://builds.dotnet.microsoft.com/dotnet/Runtime/$DotnetVersion/dotnet-runtime-$DotnetVersion-linux-x64.tar.gz && echo \\\".NET Runtime v$DotnetVersion downloaded\\\"\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": ".NET Runtime Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"$ProgressPreference='SilentlyContinue'; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $DotnetVersion='{{DotnetVersion}}'; if ([string]::IsNullOrWhiteSpace($DotnetVersion)) { $DotnetVersion=(Invoke-RestMethod -UseBasicParsing -Uri https://builds.dotnet.microsoft.com/dotnet/release-metadata/9.0/releases.json).\\\"latest-runtime\\\" }; if ($DotnetVersion -notmatch '^\\d+\\.\\d+\\.\\d+$') { Write-Output \\\"Invalid .NET Runtime version format specified\\\"; exit 1 }; Invoke-WebRequest -UseBasicParsing -Uri https://builds.dotnet.microsoft.com/dotnet/Runtime/$DotnetVersion/dotnet-runtime-$DotnetVersion-win-x64.zip -OutFile 'dotnet.zip'; if ($?) { Write-Output \\\".NET Runtime v$DotnetVersion downloaded\\\" }\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": ".NET Runtime Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "ExtractArchive",
        "UpdateSourceData": "dotnet.tar.gz",
        "UpdateSourceTarget": "{{$FullRootDir}}2519830/Dotnet",
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": ".NET Runtime Extract",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "ExtractArchive",
        "UpdateSourceData": "dotnet.zip",
        "UpdateSourceTarget": "{{$FullRootDir}}2519830/Dotnet",
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "SkipOnFailure": false
    }
]