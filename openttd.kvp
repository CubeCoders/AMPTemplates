Meta.DisplayName=OpenTTD
Meta.Description=OpenTTD Dedicated Server
Meta.OS=Windows, Linux
Meta.Arch=x86_64
Meta.Author=Greelan, DARKACE
Meta.URL=https://www.openttd.org/
Meta.DisplayImageSource=steam:1536610
Meta.EndpointURIFormat=
Meta.ConfigManifest=openttdconfig.json
Meta.MetaConfigManifest=openttdmetaconfig.json
Meta.ConfigRoot=openttd.kvp
Meta.MinAMPVersion=2.5.0.14
Meta.SpecificDockerImage=
Meta.DockerRequired=False
Meta.ContainerPolicy=RequiredOnWindows,RecommendedOnLinux
Meta.ContainerPolicyReason=Version 14 of the server requires the libgomp1 package. Using a container avoids the need to install this dependency on the host. AMP's console is unable to provide console input or output on Windows for the OpenTTD server, which is needed for proper functioning. It is able to do so on Linux, therefore Docker is required on Windows.
Meta.ExtraContainerPackages=["libgomp1"]
Meta.Prerequsites=[]
Meta.ConfigReleaseState=NotSpecified
Meta.NoCommercialUsage=False
Meta.AppConfigId=a2993b11-652a-4717-b826-e4916774c309
Meta.ConfigVersion=1.1
App.DisplayName=OpenTTD
App.RootDir=./openttd/
App.BaseDirectory=./openttd/1536610/
App.ExecutableWin=1536610\openttd.exe
App.ExecutableLinux=1536610/openttd
App.WorkingDir=1536610
App.LinuxCommandLineArgs=
App.WindowsCommandLineArgs=
App.CommandLineArgs=-D {{$ApplicationIPBinding}}:{{$ServerPort}} -c config/openttd.cfg {{$FormattedArgs}}
App.UseLinuxIOREDIR=False
App.AppSettings={}
App.EnvironmentVariables={"LD_LIBRARY_PATH":"{{$FullBaseDir}}linux64:%LD_LIBRARY_PATH%","SteamAppId":"1536610"}
App.CommandLineParameterFormat=-{0} "{1}"
App.CommandLineParameterDelimiter= 
App.ExitMethod=String
App.ExitTimeout=30
App.ExitString=quit
App.ExitFile=app_exit.lck
App.HasWriteableConsole=True
App.HasReadableConsole=True
App.SupportsLiveSettingsChanges=False
App.LiveSettingChangeCommandFormat=set {0} "{1}"
App.ApplicationIPBinding=0.0.0.0
App.Ports=[{"Protocol":"Both","Port":3979,"Ref":"ServerPort","Name":"Server Port","Description":"Port for game traffic"},{"Protocol":"TCP","Port":3977,"Ref":"ServerAdminPort","Name":"Server Admin Port","Description":"Port for server admin interface"}]
App.AdminPortRef=0
App.PrimaryApplicationPortRef=ServerPort
App.UniversalSleepApplicationUDPPortRef=ServerPort
App.UniversalSleepSteamQueryPortRef=0
App.MaxUsers=25
App.UseRandomAdminPassword=False
App.RemoteAdminPassword=Password123
App.AdminMethod=STDIO
App.AdminLoginTransform=None
App.RCONConnectDelaySeconds=5
App.RCONConnectRetrySeconds=5
App.RCONHeartbeatMinutes=0
App.RCONHeartbeatCommand=ping
App.TelnetLoginFormat={0}
App.UpdateSources=@IncludeJson[openttdupdates.json]
App.Compatibility=None
App.SteamUpdateAnonymousLogin=False
App.SteamForceLoginPrompt=False
App.RapidStartup=False
App.MonitorChildProcess=False
App.MonitorChildProcessWaitMs=100
App.MonitorChildProcessName=
App.SupportsUniversalSleep=False
App.WakeupMode=Any
App.ApplicationReadyMode=RegexMatch
Console.FilterMatchRegex=
Console.FilterMatchReplacement=
Console.ThrowawayMessageRegex=
Console.AppReadyRegex=^(?:\[[\d-]+ [\d:]+\] )?dbg: \[net(?::\d+)?\] Listening on [\d.:]+ \(IPv4\)$
Console.UserJoinRegex=^‎\*\*\* (?<username>.+?) has joined the game \(Client #(?<userid>\d+?)\)$
Console.UserLeaveRegex=^‎\*\*\* (?<username>.+?) has left the game \((?:.+?)\)$
Console.UserChatRegex=^$
Console.UpdateAvailableRegex=^\[\d\d:\d\d:\d\d\] \[INFO\] A new server update is available! v[\d\.]+.$
Console.MetricsRegex=
Console.SuppressLogAtStart=False
Console.ActivateLogRegex=
Console.UserActions={}
Limits.SleepMode=True
Limits.SleepOnStart=False
Limits.SleepDelayMinutes=5
Limits.DozeDelay=2
Limits.AutoRetryCount=5
Limits.SleepStartThresholdSeconds=25
