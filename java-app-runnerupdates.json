[
    {
        "UpdateStageName":"App Download",
        "UpdateSourcePlatform":"Linux",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c 'cd java-app-runner && DownloadSource=\"{{DownloadSource}}\"; DownloadBranch=\"{{DownloadBranch}}\"; { [[ -n \"{{DownloadUsername}}\" ]] && DownloadUrl=\"${DownloadSource/https:\\/\\//https:\\/\\/{{DownloadUsername}}:{{DownloadPassword}}@}\" || DownloadUrl=\"$DownloadSource\"; }; [ ! -d \".git\" ] && /usr/bin/git clone ${DownloadBranch:+-b $DownloadBranch} \"$DownloadUrl\" . || { [[ -z \"$DownloadBranch\" ]] && DownloadBranch=$(/usr/bin/git symbolic-ref refs/remotes/origin/HEAD | sed \"s|.*/||\"); /usr/bin/git switch $DownloadBranch && /usr/bin/git restore . && /usr/bin/git pull \"$DownloadUrl\" $DownloadBranch; }; exit $?'",
        "UpdateSourceConditionSetting":"DownloadType",
        "UpdateSourceConditionValue":"GitRepo",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"App Download",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"Executable",
        "UpdateSourceData":"powershell.exe",
        "UpdateSourceArgs":"-NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -Command \"cd java-app-runner; $DownloadSource = \\\"{{DownloadSource}}\\\"; $DownloadBranch = \\\"{{DownloadBranch}}\\\"; if ($null -ne \\\"{{DownloadUsername}}\\\") { $DownloadUrl = $DownloadSource -replace \\\"https://\\\", \\\"https://{{DownloadUsername}}:{{DownloadPassword}}@\\\" } else { $DownloadUrl = \\\"$DownloadSource\\\" }; if (!(Test-Path .\\.git -PathType Container)) { if ($DownloadBranch) { git clone -b $DownloadBranch \\\"$DownloadUrl\\\" . } else { git clone \\\"$DownloadUrl\\\" . } } else { if (-not $DownloadBranch) { $DownloadBranch = (git symbolic-ref refs/remotes/origin/HEAD) -replace '.*/' }; git switch $DownloadBranch; if ($?) { git restore . }; if ($?) { git pull \\\"$DownloadUrl\\\" $DownloadBranch } }; exit $LASTEXITCODE\"",
        "UpdateSourceConditionSetting":"DownloadType",
        "UpdateSourceConditionValue":"GitRepo",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"App Download",
        "UpdateSourcePlatform":"All",
        "UpdateSource":"GithubRelease",
        "UpdateSourceArgs":"{{DownloadSource}}",
        "UpdateSourceData":"{{DownloadFilename}}",
        "UpdateSourceVersion":"{{DownloadVersion}}",
        "UpdateSourceTarget":"{{$FullBaseDir}}",
        "UnzipUpdateSource":true,
        "OverwriteExistingFiles":true,
        "DeleteAfterExtract":true,
        "UpdateSourceConditionSetting":"DownloadType",
        "UpdateSourceConditionValue":"GithubRelease"
    },
    {
        "UpdateStageName":"App Download",
        "UpdateSourcePlatform":"All",
        "UpdateSource":"FetchURL",
        "UpdateSourceData":"{{DownloadSource}}",
        "UpdateSourceTarget":"{{$FullBaseDir}}",
        "UnzipUpdateSource":true,
        "OverwriteExistingFiles":true,
        "DeleteAfterExtract":true,
        "UpdateSourceConditionSetting":"DownloadType",
        "UpdateSourceConditionValue":"DownloadURL"
    }
]
