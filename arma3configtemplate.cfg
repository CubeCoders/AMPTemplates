// server.cfg

// This file is automatically generated by AMP. All uncommented settings are controlled by AMP.
// If you wish to configure other settings (those that are commented), you can do so manually in a separate
// configuration file created by you in the same directory (the default name assumed by AMP is "custom.cfg" - you can change this in AMP).
// The separate configuration file will ensure that your settings are not overwritten by a later update.

// Full information on settings is available at https://community.bistudio.com/wiki/Arma_3:_Server_Config_File

// GLOBAL SETTINGS
hostname = "{{hostname}}";
password = "{{password}}";
passwordAdmin = "{{passwordAdmin}}";
serverCommandPassword = "{{serverCommandPassword}}";
//admins[] = {};
//headlessClients[] = {};
//localClient[] = {};

logFile = "server_console.log";

// WELCOME MESSAGE ("message of the day")
motd[] = { {{motd}} };
motdInterval = {{motdInterval}};

// JOINING RULES
maxPlayers = {{maxPlayers}};
kickDuplicate = {{kickDuplicate}};
verifySignatures = {{verifySignatures}};
allowedFilePatching = {{allowedFilePatching}};
filePatchingExceptions[] = { {{filePatchingExceptions}} };
requiredBuild = {{requiredBuild}};
loopback = {{loopback}};
upnp = {{upnp}};
skipLobby = {{skipLobby}};


// VOTING
voteMissionPlayers = {{voteMissionPlayers}};
voteThreshold = {{voteThreshold}};
//allowedVoteCmds[] = { {"kick", false, false, 0.75} };
//allowedVotedAdminCmds[] = { { "mission", true, true } };


// INGAME SETTINGS
disableVoN = {{disableVoN}};
vonCodec = {{vonCodec}};
vonCodecQuality = {{vonCodecQuality}};
persistent = {{persistent}};
timeStampFormat = "{{timeStampFormat}}";
BattlEye = 1;
allowedLoadFileExtensions[] = {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"};
allowedPreprocessFileExtensions[] = {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"};
allowedHTMLLoadExtensions[] = {"htm","html","xml","txt"};
//allowedHTMLLoadURIs[] = {};
enablePlayerDiag = {{enablePlayerDiag}};
drawingInMap = {{drawingInMap}};
allowProfileGlasses = {{allowProfileGlasses}};
forcedDifficulty = "{{forcedDifficulty}}";


// TIMEOUTS
disconnectTimeout = {{disconnectTimeout}};
maxDesync = {{maxDesync}};
maxPing= {{maxPing}};
maxPacketLoss= {{maxPacketLoss}};
kickClientsOnSlowNetwork[] = { {{kickPing}}, {{kickLoss}}, {{kickDesync}}, {{kickTimeout}} }; 
kickTimeout[] = { {0, {{kickManual}}}, {1, {{kickConnectivity}}}, {2, {{kickBattlEye}}}, {3, {{kickHarmless}}} };
votingTimeOut[] = {{{votingTimeOut}}};	
roleTimeOut[] = {{{roleTimeOut}}};
briefingTimeOut[] = {{{briefingTimeOut}}};	
debriefingTimeOut[] = {{{debriefingTimeOut}}};
lobbyIdleTimeout = {{lobbyIdleTimeout}};
armaUnitsTimeout = {{armaUnitsTimeout}};


// SCRIPTING ISSUES
onUserConnected = "{{onUserConnected}}";
onUserDisconnected = "{{onUserDisconnected}}";
doubleIdDetected = "{{doubleIdDetected}}";
onUserKicked = "{{onUserKicked}}";
regularCheck = "{{regularCheck}}";


// SIGNATURE VERIFICATION
onUnsignedData = "{{onUnsignedData}}";
onHackedData = "{{onHackedData}}";
onDifferentData = "{{onDifferentData}}";


// MISSIONS CYCLE (see below)
randomMissionOrder = {{randomMissionOrder}};
autoSelectMission = {{autoSelectMission}};

//class Missions {};			// An empty Missions class means there will be no mission rotation

//missionWhitelist[] = {};	// An empty whitelist means there is no restriction on what missions' available

// OTHER OPTIONS
statisticsEnabled = {{statisticsEnabled}};
//callExtReportLimit = 1000;
//disableChannels[] = {};
zeusCompositionScriptLevel = {{zeusCompositionScriptLevel}};
forceRotorLibSimulation = {{forceRotorLibSimulation}};
steamProtocolMaxDataSize = 1024;
class AdvancedOptions
{
	LogObjectNotFound = true;			// logging enabled
	SkipDescriptionParsing = false;		// parse description.ext
	ignoreMissionLoadErrors = false;	// do not ingore errors
};
