Meta.DisplayName=Sons Of The Forest
Meta.Description=Sons Of The Forest Dedicated Server
Meta.OS=Windows, Linux
Meta.AarchSupport=Unknown
Meta.Arch=x86_64
Meta.Author=IceOfWraith
Meta.URL=https://store.steampowered.com/app/1326470/Sons_Of_The_Forest/
Meta.DisplayImageSource=steam:1326470
Meta.EndpointURIFormat=steam://connect/{ip}:{GenericModule.App.Ports.$SteamQueryPort}
Meta.ConfigManifest=sons-of-the-forestconfig.json
Meta.MetaConfigManifest=sons-of-the-forestmetaconfig.json
Meta.ConfigRoot=sons-of-the-forest.kvp
Meta.MinAMPVersion=2.4.5.0
Meta.SpecificDockerImage=cubecoders/ampbase:wine8
Meta.DockerRequired=False
Meta.ContainerPolicy=RecommendedOnLinux
Meta.ContainerPolicyReason=The server requires Wine 8 (or later) and Xvfb to run on Linux. Using a container avoids the need to install these dependencies on the host.
Meta.ConfigReleaseState=NotSpecified
Meta.NoCommercialUsage=False
App.DisplayName=Sons Of The Forest
App.RootDir=./sons-of-the-forest/
App.BaseDirectory=./sons-of-the-forest/2465200/
App.SteamWorkshopDownloadLocation=
App.ExecutableWin=2465200\SonsOfTheForestDS.exe
App.ExecutableLinux=/usr/bin/xvfb-run
App.WorkingDir=2465200
App.LinuxCommandLineArgs=-a wine "./SonsOfTheForestDS.exe" 
App.WindowsCommandLineArgs=
App.CommandLineArgs={{$PlatformArgs}} -dedicatedserver.IpAddress "{{$ApplicationIPBinding}}" -dedicatedserver.GamePort "{{$GamePort}}" -dedicatedserver.QueryPort "{{$SteamQueryPort}}" -dedicatedserver.BlobSyncPort "{{$BlobSyncPort}}" -userdatapath "{{$FullBaseDir}}saves" {{$FormattedArgs}}
App.UseLinuxIOREDIR=False
App.EnvironmentVariables={"LD_LIBRARY_PATH":"./linux64:%LD_LIBRARY_PATH%","SteamAppId":"1326470","WINEPREFIX":"{{$FullRootDir}}.wine","WINEARCH":"win64","WINEDEBUG":"-all"}
App.CommandLineParameterFormat=-{0} "{1}"
App.CommandLineParameterDelimiter= 
App.ExitMethod=OS_CLOSE
App.ExitTimeout=30
App.ExitString=stop
App.ExitFile=app_exit.lck
App.HasWriteableConsole=True
App.HasReadableConsole=True
App.SupportsLiveSettingsChanges=False
App.LiveSettingChangeCommandFormat=set {0} "{1}"
App.ApplicationIPBinding=0.0.0.0
App.Ports=@IncludeJson[sons-of-the-forestports.json]
App.AdminPortRef=0
App.PrimaryApplicationPortRef=GamePort
App.UniversalSleepApplicationUDPPortRef=GamePort
App.UniversalSleepSteamQueryPortRef=SteamQueryPort
App.MaxUsers=8
App.UseRandomAdminPassword=True
App.PersistRandomPassword=False
App.RemoteAdminPassword=
App.AdminMethod=STDIO
App.AdminLoginTransform=None
App.LoginTransformPrefix=
App.RCONConnectDelaySeconds=30
App.RCONConnectRetrySeconds=15
App.RCONHeartbeatMinutes=0
App.RCONHeartbeatCommand=ping
App.TelnetLoginFormat={0}
App.UpdateSources=@IncludeJson[sons-of-the-forestupdates.json]
App.PreStartStages=[]
App.Compatibility=None
App.SteamUpdateAnonymousLogin=True
App.SteamForceLoginPrompt=False
App.RapidStartup=False
App.MonitorChildProcess=True
App.MonitorChildProcessWaitMs=1000
App.MonitorChildProcessName=wine64
App.SupportsUniversalSleep=False
App.WakeupMode=Any
App.ApplicationReadyMode=RegexMatch
App.TemplateMatchRegex={{(\$?[\w]+)}}
Console.FilterMatchRegex=
Console.FilterMatchReplacement=
Console.ThrowawayMessageRegex=^(WARNING|ERROR): Shader.+|Couldn't create a Convex Mesh from source mesh.*|No mesh data available for mesh.*|ALSA lib.*|\[FMOD\] Error \(ERR_INVALID_HANDLE\): An invalid object handle was used\.$
Console.AppReadyRegex=^#DSL Dedicated server loaded.|#DSE \[Self-Tests\] Please restart the server.$
Console.UserJoinRegex=^#DSL Steam auth successful for client \d+ with steam id (?<userid>.+?). username (?<username>.+?)$
Console.UserLeaveRegex=^#DSL Unregistering client \d+ with steam id (?<userid>.+?). username (?<username>.+?)$
Console.UserChatRegex=^$
Console.UpdateAvailableRegex=^\[\d\d:\d\d:\d\d\] \[INFO\] A new server update is available! v[\d\.]+.$
Console.MetricsRegex=
Console.SuppressLogAtStart=False
Console.ActivateLogRegex=
Console.UserActions={}
Limits.SleepMode=True
Limits.SleepOnStart=False
Limits.SleepDelayMinutes=5
Limits.DozeDelay=2
Limits.AutoRetryCount=5
Limits.SleepStartThresholdSeconds=25
