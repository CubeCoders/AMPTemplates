[
    {
        "UpdateStageName": "Wipe Server Files",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd \\\"{{$FullBaseDir}}server/{{serveridentity}}\\\" && rm -f *.map *.sav* {{ModDBWipelist}} >/dev/null 2>&1; cd \\\"{{$FullBaseDir}}carbon/data\\\" >/dev/null 2>&1 && rm -f {{CarbonOxideDataWipelist}} >/dev/null 2>&1; cd \\\"{{$FullBaseDir}}oxide/data\\\" >/dev/null 2>&1 && rm -f {{CarbonOxideDataWipelist}} >/dev/null 2>&1\"",
        "UpdateSourceConditionSetting": "EnableWipe",
        "UpdateSourceConditionValue": "true",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Wipe Server Files",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd \"{{$FullBaseDir}}server\\{{serveridentity}}\" && del /Q /F *.map *.sav* {{ModDBWipelist}} > NUL 2>&1 & cd \"{{$FullBaseDir}}carbon\\data\" > NUL 2>&1 && del /Q /F {{CarbonOxideDataWipelist}} > NUL 2>&1 & cd \"{{$FullBaseDir}}oxide\\data\" > NUL 2>&1 && del /Q /F {{CarbonOxideDataWipelist}} > NUL 2>&1",
        "UpdateSourceConditionSetting": "EnableWipe",
        "UpdateSourceConditionValue": "true",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Remove Carbon",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd ./rust/258550 && rm -rf carbon carbon.sh libdoorstop.so >/dev/null 2>&1\"",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "umod",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Remove Carbon",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd rust\\258550 && del /Q /F doorstop_config.ini winhttp.dll > NUL 2>&1 && rd /S /Q carbon > NUL 2>&1",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "umod",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Remove Carbon",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd ./rust/258550 && rm -rf carbon carbon.sh libdoorstop.so >/dev/null 2>&1\"",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "none",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Remove Carbon",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd rust\\258550 && del /Q /F doorstop_config.ini winhttp.dll > NUL 2>&1 && rd /S /Q carbon > NUL 2>&1",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "none",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Remove uMod",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd ./rust/258550 && rm -rf oxide Oxide.Compiler compiler*.log RustDedicated_Data/Managed/Oxide* >/dev/null 2>&1\"",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Remove uMod",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd rust\\258550 && del /Q /F Oxide.Compiler.exe compiler*.log RustDedicated_Data\\Managed\\Oxide* > NUL 2>&1 && rd /S /Q oxide > NUL 2>&1",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Remove uMod",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd ./rust/258550 && rm -rf oxide Oxide.Compiler compiler*.log RustDedicated_Data/Managed/Oxide* >/dev/null 2>&1\"",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "none",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Remove uMod",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd rust\\258550 && del /Q /F Oxide.Compiler.exe compiler*.log RustDedicated_Data\\Managed\\Oxide* > NUL 2>&1 && rd /S /Q oxide > NUL 2>&1",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "none",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Rust Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "SteamCMD",
        "UpdateSourceData": "258550",
        "UpdateSourceArgs": "252490",
        "UpdateSourceVersion": "{{ServerBranch}}",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Carbon Download - Production",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "GithubRelease",
        "UpdateSourceArgs": "CarbonCommunity/Carbon",
        "UpdateSourceData": "Carbon.Windows.Release.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "production",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Carbon Download - Production",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "GithubRelease",
        "UpdateSourceArgs": "CarbonCommunity/Carbon",
        "UpdateSourceData": "Carbon.Linux.Release.tar.gz",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "production",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Carbon Download - Develop",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "HTTP",
        "UpdateSourceData": "https://github.com/CarbonCommunity/Carbon/archive/refs/heads/develop.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "develop",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Carbon Download - Develop",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "HTTP",
        "UpdateSourceData": "https://github.com/CarbonCommunity/Carbon/archive/refs/heads/develop.tar.gz",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "develop",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Carbon Download - Staging",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "HTTP",
        "UpdateSourceData": "https://github.com/CarbonCommunity/Carbon/archive/refs/heads/staging.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "staging",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Carbon Download - Staging",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "HTTP",
        "UpdateSourceData": "https://github.com/CarbonCommunity/Carbon/archive/refs/heads/staging.tar.gz",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "staging",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Carbon Download - Aux01",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "HTTP",
        "UpdateSourceData": "https://github.com/CarbonCommunity/Carbon/archive/refs/heads/aux01.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "aux01",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Carbon Download - Aux01",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "HTTP",
        "UpdateSourceData": "https://github.com/CarbonCommunity/Carbon/archive/refs/heads/aux01.tar.gz",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "aux01",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Carbon Download - Aux02",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "HTTP",
        "UpdateSourceData": "https://github.com/CarbonCommunity/Carbon/archive/refs/heads/aux02.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "aux02",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Carbon Download - Aux02",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "HTTP",
        "UpdateSourceData": "https://github.com/CarbonCommunity/Carbon/archive/refs/heads/aux02.tar.gz",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "aux02",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Move Carbon Files - Develop",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C if exist \"{{$FullBaseDir}}Carbon-develop\" ( robocopy \"{{$FullBaseDir}}Carbon-develop\" \"{{$FullBaseDir}}\" /E /MOVE /NFL /NDL /NJH /NJS /NC /NS /NP > NUL 2>&1 )",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "develop",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Move Carbon Files - Develop",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"if [ -d '{{$FullBaseDir}}Carbon-develop' ]; then cp -r '{{$FullBaseDir}}Carbon-develop'/* '{{$FullBaseDir}}' 2>/dev/null; rm -rf '{{$FullBaseDir}}Carbon-develop' 2>/dev/null; fi\"",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "develop",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Move Carbon Files - Staging",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C if exist \"{{$FullBaseDir}}Carbon-staging\" ( robocopy \"{{$FullBaseDir}}Carbon-staging\" \"{{$FullBaseDir}}\" /E /MOVE /NFL /NDL /NJH /NJS /NC /NS /NP > NUL 2>&1 )",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "staging",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Move Carbon Files - Staging",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"if [ -d '{{$FullBaseDir}}Carbon-staging' ]; then cp -r '{{$FullBaseDir}}Carbon-staging'/* '{{$FullBaseDir}}' 2>/dev/null; rm -rf '{{$FullBaseDir}}Carbon-staging' 2>/dev/null; fi\"",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "staging",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Move Carbon Files - Aux01",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C if exist \"{{$FullBaseDir}}Carbon-aux01\" ( robocopy \"{{$FullBaseDir}}Carbon-aux01\" \"{{$FullBaseDir}}\" /E /MOVE /NFL /NDL /NJH /NJS /NC /NS /NP > NUL 2>&1 )",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "aux01",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Move Carbon Files - Aux01",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"if [ -d '{{$FullBaseDir}}Carbon-aux01' ]; then cp -r '{{$FullBaseDir}}Carbon-aux01'/* '{{$FullBaseDir}}' 2>/dev/null; rm -rf '{{$FullBaseDir}}Carbon-aux01' 2>/dev/null; fi\"",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "aux01",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Move Carbon Files - Aux02",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C if exist \"{{$FullBaseDir}}Carbon-aux02\" ( robocopy \"{{$FullBaseDir}}Carbon-aux02\" \"{{$FullBaseDir}}\" /E /MOVE /NFL /NDL /NJH /NJS /NC /NS /NP > NUL 2>&1 )",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "aux02",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "Move Carbon Files - Aux02",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"if [ -d '{{$FullBaseDir}}Carbon-aux02' ]; then cp -r '{{$FullBaseDir}}Carbon-aux02'/* '{{$FullBaseDir}}' 2>/dev/null; rm -rf '{{$FullBaseDir}}Carbon-aux02' 2>/dev/null; fi\"",
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "carbon",
        "UpdateSourceConditionSetting2": "CarbonBranch",
        "UpdateSourceConditionValue2": "aux02",
        "SkipOnFailure": true
    },
    {
        "UpdateStageName": "uMod Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "GithubRelease",
        "UpdateSourceArgs": "OxideMod/Oxide.Rust",
        "UpdateSourceData": "Oxide.Rust.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "umod",
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "uMod Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "GithubRelease",
        "UpdateSourceArgs": "OxideMod/Oxide.Rust",
        "UpdateSourceData": "Oxide.Rust-linux.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "ModLoader",
        "UpdateSourceConditionValue": "umod",
        "DeleteAfterExtract": true
    }
]
