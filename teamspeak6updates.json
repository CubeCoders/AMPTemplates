[
    {
        "UpdateStageName": "TeamSpeak 6 Server Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"ServerVersion=\\\"{{ServerVersion}}\\\"; cd ts6 && if [[ -x server/tsserver ]]; then InstalledVersion=$(server/tsserver --version); InstalledVersion=\\\"${InstalledVersion%% *}\\\"; else InstalledVersion=\\\"\\\"; fi; [[ -z \\\"$ServerVersion\\\" ]] && ServerVersion=$(wget -qO- https://api.github.com/repos/teamspeak/teamspeak6-server/releases/latest | jq -r .name); if [[ ! \\\"$ServerVersion\\\" =~ ^v6\\.[0-9]+\\.[0-9]+(-beta[0-9]*)?$ ]]; then echo \\\"Invalid TeamSpeak 6 version format specified\\\" && exit 1; elif [[ \\\"$InstalledVersion\\\" == \\\"$ServerVersion\\\" ]]; then echo \\\"TeamSpeak 6 $ServerVersion already installed. Skipping\\\" && exit 0; else TagVersion=\\\"${ServerVersion/-//}\\\"; [[ -f teamspeak6.tar.bz2 ]] && rm -f teamspeak6.tar.bz2 >/dev/null 2>&1; wget -qO teamspeak6.tar.bz2 https://github.com/teamspeak/teamspeak6-server/releases/download/$TagVersion/teamspeak-server_linux_amd64-$ServerVersion.tar.bz2 || { echo \\\"Download failed from GitHub. Aborting\\\"; exit 1; }; tar -xjf teamspeak6.tar.bz2 -C server --strip-components=1 >/dev/null 2>&1 && rm -f teamspeak6.tar.bz2 >/dev/null 2>&1 && echo \\\"TeamSpeak 6 $ServerVersion downloaded\\\"; fi\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "TeamSpeak 6 Server Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"$ProgressPreference='SilentlyContinue'; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $ServerVersion='{{ServerVersion}}'; Set-Location -Path 'ts6'; if ( [string]::IsNullOrWhiteSpace($ServerVersion) ) { $ServerVersion = (Invoke-RestMethod -UseBasicParsing -Uri \\\"https://api.github.com/repos/teamspeak/teamspeak6-server/releases/latest\\\").name }; if ( $ServerVersion -notmatch '^v6\\.\\d+\\.\\d+(-beta\\d*)?$' ) { Write-Output 'Invalid TeamSpeak 6 version format specified'; exit 1 } else { $TagVersion = $ServerVersion -replace '-', '/'; if ( Test-Path teamspeak6.zip ) { Remove-Item teamspeak6.zip -Force -ErrorAction SilentlyContinue *> $null }; try { Invoke-WebRequest -UseBasicParsing -Uri https://github.com/teamspeak/teamspeak6-server/releases/download/$TagVersion/teamspeak-server_win64-$ServerVersion.zip -OutFile teamspeak6.zip -ErrorAction Stop } catch { Write-Output \\\"Download failed from GitHub. Aborting\\\"; exit 1; }; Expand-Archive -Path \\\"teamspeak6.zip\\\" -DestinationPath \\\".\\\" -Force *> $null; if ( Test-Path teamspeak6.zip ) { Remove-Item teamspeak6.zip -Force -ErrorAction SilentlyContinue *> $null }; if ( Test-Path 'teamspeak-server_win64' ) { robocopy 'teamspeak-server_win64' 'server' /E /MOVE /NFL /NDL /NJH /NJS /NP *> $null; if ($LASTEXITCODE -gt 7) { exit $LASTEXITCODE } else { if ( Test-Path 'teamspeak-server_win64' ) { Remove-Item 'teamspeak-server_win64' -Recurse -Force -ErrorAction SilentlyContinue *> $null }; Write-Output \\\"TeamSpeak 6 $ServerVersion downloaded\\\" } } }\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Create tsserver.yaml File",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateFile",
        "UpdateSourceArgs": "{{$FullBaseDir}}tsserver.yaml",
        "OverwriteExistingFiles": false
    }
]