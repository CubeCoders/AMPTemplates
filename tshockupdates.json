[
    {
        "UpdateStageName": "TShock Server Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "FetchURLFromJQ",
        "UpdateSourceData": "https://api.github.com/repos/Pryaxis/TShock/releases/latest",
        "UpdateSourceArgs": "$.assets[3].browser_download_url",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "TShock Server Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "FetchURLFromJQ",
        "UpdateSourceData": "https://api.github.com/repos/Pryaxis/TShock/releases/latest",
        "UpdateSourceArgs": "$.assets[0].browser_download_url",
        "UpdateSourceArch": "x86_64",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "TShock Server Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "FetchURLFromJQ",
        "UpdateSourceData": "https://api.github.com/repos/Pryaxis/TShock/releases/latest",
        "UpdateSourceArgs": "$.assets[1].browser_download_url",
        "UpdateSourceArch": "aarch64",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "TShock Server Unpack",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArch": "x86_64",
        "UpdateSourceArgs": "-c \"cd \\\"{{$FullBaseDir}}\\\" && tar -xf TShock-Beta-linux-x64-Release.tar && rm -f TShock-Beta-linux-x64-Release.tar && chmod +x TShock.Server\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "TShock Server Unpack",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArch": "aarch64",
        "UpdateSourceArgs": "-c \"cd \\\"{{$FullBaseDir}}\\\" && tar -xf TShock-Beta-linux-arm64-Release.tar && rm -f TShock-Beta-linux-arm64-Release.tar && chmod +x TShock.Server\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Create TShock Directory",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}tshock"
    },
    {
        "UpdateStageName": "Server Config File Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://github.com/CubeCoders/AMPTemplates/raw/main/tshockserverconfig.json",
        "UpdateSourceArgs": "config.json",
        "UpdateSourceTarget": "{{$FullBaseDir}}tshock",
        "OverwriteExistingFiles": false
    },
    {
        "UpdateStageName": "Create Dotnet Directory",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}dotnet"
    },
    {
        "UpdateStageName": "ASP.NET Core Runtime Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "x86_64",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"DotnetVersion=\\\"{{DotnetVersion}}\\\" && if [[ -z \\\"$DotnetVersion\\\" ]]; then DotnetVersion=$(wget -qO- https://builds.dotnet.microsoft.com/dotnet/release-metadata/6.0/releases.json | jq -r \\\".[\\\\\\\"latest-runtime\\\\\\\"]\\\"); fi && if [[ ! \\\"$DotnetVersion\\\" =~ ^[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then echo \\\"Invalid ASP.NET Core Runtime version format specified\\\" && exit 1; fi && wget -qO dotnet.tar.gz https://builds.dotnet.microsoft.com/dotnet/aspnetcore/Runtime/$DotnetVersion/aspnetcore-runtime-$DotnetVersion-linux-x64.tar.gz && echo \\\"ASP.NET Core Runtime v$DotnetVersion downloaded\\\"\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "ASP.NET Core Runtime Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "aarch64",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"DotnetVersion=\\\"{{DotnetVersion}}\\\" && if [[ -z \\\"$DotnetVersion\\\" ]]; then DotnetVersion=$(wget -qO- https://builds.dotnet.microsoft.com/dotnet/release-metadata/6.0/releases.json | jq -r \\\".[\\\\\\\"latest-runtime\\\\\\\"]\\\"); fi && if [[ ! \\\"$DotnetVersion\\\" =~ ^[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then echo \\\"Invalid ASP.NET Core Runtime version format specified\\\" && exit 1; fi && wget -qO dotnet.tar.gz https://builds.dotnet.microsoft.com/dotnet/aspnetcore/Runtime/$DotnetVersion/aspnetcore-runtime-$DotnetVersion-linux-arm64.tar.gz && echo \\\"ASP.NET Core Runtime v$DotnetVersion downloaded\\\"\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "ASP.NET Core Runtime Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"$ProgressPreference='SilentlyContinue'; $DotnetVersion='{{DotnetVersion}}'; if ([string]::IsNullOrWhiteSpace($DotnetVersion)) { $DotnetVersion=(Invoke-RestMethod -UseBasicParsing -Uri https://builds.dotnet.microsoft.com/dotnet/release-metadata/6.0/releases.json).\\\"latest-runtime\\\" }; if ($DotnetVersion -notmatch '^\\d+\\.\\d+\\.\\d+$') { Write-Output \\\"Invalid ASP.NET Core Runtime version format specified\\\"; exit 1 }; Invoke-WebRequest -UseBasicParsing -Uri https://builds.dotnet.microsoft.com/dotnet/aspnetcore/Runtime/$DotnetVersion/aspnetcore-runtime-$DotnetVersion-win-x64.zip -OutFile 'dotnet.zip'; if ($?) { Write-Output \\\"ASP.NET Core Runtime v$DotnetVersion downloaded\\\" }\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "ASP.NET Core Runtime Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "ExtractArchive",
        "UpdateSourceData": "dotnet.tar.gz",
        "UpdateSourceTarget": "{{$FullBaseDir}}dotnet",
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "ASP.NET Core Runtime Extract",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "ExtractArchive",
        "UpdateSourceData": "dotnet.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}dotnet",
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Backup Exclusions Download 1",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://github.com/CubeCoders/AMPTemplates/raw/main/exclusions/.backupExclusionsTShock",
        "UpdateSourceArgs": ".backupExclude",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UpdateSourceConditionSetting": "backupExclude",
        "UpdateSourceConditionValue": "true",
        "OverwriteExistingFiles": false
    }
]