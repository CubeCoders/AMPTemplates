[
    {
        "UpdateStageName": "App Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd node-server && rm -rf srv >/dev/null 2>&1; DownloadSource=\\\"{{DownloadSource}}\\\"; DownloadBranch=\\\"{{DownloadBranch}}\\\"; [[ -n \\\"{{DownloadUsername}}\\\" ]] && DownloadUrl=\\\"${DownloadSource/https:\\/\\//https:\\/\\/{{DownloadUsername}}:{{DownloadPassword}}@}\\\" || DownloadUrl=\\\"$DownloadSource\\\"; [ ! -d app/.git ] && { echo \\\"Installing the app\\\" && git clone \\\"$DownloadUrl\\\" srv >/dev/null && \\cp -r srv/. app/ >/dev/null 2>&1 && rm -rf srv >/dev/null 2>&1 && cd app && git fetch --all >/dev/null && [ -z \\\"$DownloadBranch\\\" ] && DownloadBranch=$(/usr/bin/git symbolic-ref refs/remotes/origin/HEAD | sed \\\"s|.*/||\\\"); git checkout $DownloadBranch --force >/dev/null && echo \\\"App installed\\\"; } || { echo \\\"Updating the app\\\" && cd app && git fetch --all >/dev/null && [ -z \\\"$DownloadBranch\\\" ] && DownloadBranch=$(/usr/bin/git symbolic-ref refs/remotes/origin/HEAD | sed \\\"s|.*/||\\\"); git checkout $DownloadBranch --force >/dev/null && echo \\\"App updated\\\"; }\"",
        "UpdateSourceConditionSetting": "DownloadType",
        "UpdateSourceConditionValue": "GitRepo",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "App Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"$ProgressPreference='SilentlyContinue'; cd node-server; Remove-Item srv -Recurse -Force -ErrorAction SilentlyContinue | Out-Null; $DownloadSource = \\\"{{DownloadSource}}\\\"; $DownloadBranch = \\\"{{DownloadBranch}}\\\"; if (![string]::IsNullOrEmpty(\\\"{{DownloadUsername}}\\\")) { $DownloadUrl = $DownloadSource -replace \\\"https://\\\", \\\"https://{{DownloadUsername}}:{{DownloadPassword}}@\\\" } else { $DownloadUrl = \\\"$DownloadSource\\\" }; if (-Not (Test-Path app/.git)) { Write-Output \\\"Installing the app\\\"; git clone \\\"$DownloadUrl\\\" srv 1> $null; Copy-Item srv/* app/ -Recurse -Force -ErrorAction SilentlyContinue | Out-Null; Remove-Item srv -Recurse -Force -ErrorAction SilentlyContinue | Out-Null; cd app; if ([string]::IsNullOrEmpty($DownloadBranch)) { $DownloadBranch = (git symbolic-ref refs/remotes/origin/HEAD) -replace '.*/' }; git checkout --force $DownloadBranch 1> $null; if ($?) { Write-Output \\\"App installed\\\" } } else { Write-Output \\\"Updating the app\\\"; cd app; git fetch --all 1> $null; if ([string]::IsNullOrEmpty($DownloadBranch)) { $DownloadBranch = (git symbolic-ref refs/remotes/origin/HEAD) -replace '.*/' }; git checkout --force $DownloadBranch 1> $null; if ($?) { Write-Output \\\"App updated\\\" } }\"",
        "UpdateSourceConditionSetting": "DownloadType",
        "UpdateSourceConditionValue": "GitRepo",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "App Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "GithubRelease",
        "UpdateSourceArgs": "{{DownloadSource}}",
        "UpdateSourceData": "{{DownloadFilename}}",
        "UpdateSourceVersion": "{{DownloadVersion}}",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "UpdateSourceConditionSetting": "DownloadType",
        "UpdateSourceConditionValue": "GithubRelease"
    },
    {
        "UpdateStageName": "App Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "{{DownloadSource}}",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "UpdateSourceConditionSetting": "DownloadType",
        "UpdateSourceConditionValue": "DownloadURL"
    },
    {
        "UpdateStageName": "Node.js Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "x86_64",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://nodejs.org/download/release/{{NodeVersion}}/node-{{NodeVersion}}-linux-x64.tar.gz",
        "UpdateSourceTarget": "{{$FullRootDir}}",
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "DisableNodeDownload",
        "UpdateSourceConditionValue": "false"
    },
    {
        "UpdateStageName": "Node.js Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "x86_64",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd node-server && rm -Rf node/ >/dev/null 2>&1 && tar xfv node-{{NodeVersion}}-linux-x64.tar.gz >/dev/null && mv -v node-{{NodeVersion}}-linux-x64 node >/dev/null && rm node-{{NodeVersion}}-linux-x64.tar.gz && echo \\\"Node.js {{NodeVersion}} installed\\\"\"",
        "UpdateSourceConditionSetting": "DisableNodeDownload",
        "UpdateSourceConditionValue": "false",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Node.js Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "aarch64",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://nodejs.org/download/release/{{NodeVersion}}/node-{{NodeVersion}}-linux-arm64.tar.gz",
        "UpdateSourceTarget": "{{$FullRootDir}}",
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "DisableNodeDownload",
        "UpdateSourceConditionValue": "false"
    },
    {
        "UpdateStageName": "Node.js Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "aarch64",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd node-server && rm -Rf node/ >/dev/null 2>&1 && tar xfv node-{{NodeVersion}}-linux-arm64.tar.gz >/dev/null && mv -v node-{{NodeVersion}}-linux-arm64 node >/dev/null && rm node-{{NodeVersion}}-linux-arm64.tar.gz && echo \\\"Node.js {{NodeVersion}} installed\\\"\"",
        "UpdateSourceConditionSetting": "DisableNodeDownload",
        "UpdateSourceConditionValue": "false",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Node.js Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://nodejs.org/download/release/{{NodeVersion}}/node-{{NodeVersion}}-win-x64.zip",
        "UpdateSourceTarget": "{{$FullRootDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "UpdateSourceConditionSetting": "DisableNodeDownload",
        "UpdateSourceConditionValue": "false"
    },
    {
        "UpdateStageName": "Node.js Extract",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd node-server && rmdir /S /Q node > NUL 2>&1 & rename node-{{NodeVersion}}-win-x64 node > NUL && echo Node.js {{NodeVersion}} installed",
        "UpdateSourceConditionSetting": "DisableNodeDownload",
        "UpdateSourceConditionValue": "false",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Install npm Packages",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd node-server/app/{{ApplicationLocation}} && export PATH=\\\"{{$FullRootDir}}node/bin:$PATH\\\" && npm install {{NpmPackages}}\"",
        "UpdateSourceConditionSetting": "NpmInstallType",
        "UpdateSourceConditionValue": "specify",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Install npm Packages",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd node-server\\app\\{{ApplicationLocation}} && set \"PATH={{$FullRootDir}}node;%PATH%\" && npm install {{NpmPackages}}",
        "UpdateSourceConditionSetting": "NpmInstallType",
        "UpdateSourceConditionValue": "specify",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Install npm Packages",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd node-server/app/{{ApplicationLocation}} && export PATH=\\\"{{$FullRootDir}}node/bin:$PATH\\\" && npm install\"",
        "UpdateSourceConditionSetting": "NpmInstallType",
        "UpdateSourceConditionValue": "npmi",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Install npm Packages",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd node-server\\app\\{{ApplicationLocation}} && set \"PATH={{$FullRootDir}}node;%PATH%\" && npm install",
        "UpdateSourceConditionSetting": "NpmInstallType",
        "UpdateSourceConditionValue": "npmi",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Install npm Packages",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd node-server/app/{{ApplicationLocation}} && export PATH=\\\"{{$FullRootDir}}node/bin:$PATH\\\" && npm ci\"",
        "UpdateSourceConditionSetting": "NpmInstallType",
        "UpdateSourceConditionValue": "npmci",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Install npm Packages",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd node-server\\app\\{{ApplicationLocation}} && set \"PATH={{$FullRootDir}}node;%PATH%\" && npm ci",
        "UpdateSourceConditionSetting": "NpmInstallType",
        "UpdateSourceConditionValue": "npmci",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Run App Setup Command",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd node-server/app/{{ApplicationLocation}} && export PATH=\\\"{{$FullRootDir}}node/bin:$PATH\\\" && {{AppSetupCommands}}\"",
        "UpdateSourceConditionSetting": "RunAppSetupCommands",
        "UpdateSourceConditionValue": "true",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Run App Setup Command",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd node-server\\app\\{{ApplicationLocation}} && set \"PATH={{$FullRootDir}}node;%PATH%\" && {{AppSetupCommands}}",
        "UpdateSourceConditionSetting": "RunAppSetupCommands",
        "UpdateSourceConditionValue": "true",
        "SkipOnFailure": false
    }
]